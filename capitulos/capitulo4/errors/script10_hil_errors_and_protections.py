import matplotlib.pyplot as plt
import pandas
import numpy as np

plt.rcParams["font.family"] = 'Times New Roman'
plt.rcParams["font.style"] = 'normal'
plt.rcParams["font.variant"] = 'normal'
plt.rcParams["font.weight"] = 'normal'
plt.rcParams["font.stretch"] = 'normal'
plt.rcParams["font.size"] = '11'

Er1 = pandas.read_csv("D:/Users/FELIPE/Documents/Mestrado/dissertacao/capitulos/Capitulo4/errors/Error1.csv")
Er2 = pandas.read_csv("D:/Users/FELIPE/Documents/Mestrado/dissertacao/capitulos/Capitulo4/errors/Error2.csv")
Er3 = pandas.read_csv("D:/Users/FELIPE/Documents/Mestrado/dissertacao/capitulos/Capitulo4/errors/Error3.csv")
Er4 = pandas.read_csv("D:/Users/FELIPE/Documents/Mestrado/dissertacao/capitulos/Capitulo4/errors/Error4.csv")
Er5 = pandas.read_csv("D:/Users/FELIPE/Documents/Mestrado/dissertacao/capitulos/Capitulo4/errors/Error5.csv")
Er6 = pandas.read_csv("D:/Users/FELIPE/Documents/Mestrado/dissertacao/capitulos/Capitulo4/errors/Error6.csv")
Er6_ = pandas.read_csv("D:/Users/FELIPE/Documents/Mestrado/dissertacao/capitulos/Capitulo4/errors/Error6_.csv")
Er7 = pandas.read_csv("D:/Users/FELIPE/Documents/Mestrado/dissertacao/capitulos/Capitulo4/errors/Error7.csv")

fig = plt.figure()
curr = fig.add_subplot(211)
plt.grid(True)
plt.ylabel("Current (A)")
volt = fig.add_subplot(212)
volt.plot(Er1["Time"], Er1["Vbus11"], '-', c='blue', lineWidth=2, label='Vbus')
volt.plot(Er1["Time"], Er1["Rede"], '-', c='darkgreen', lineWidth=1, label='Grid')
t = np.arange(-0.2, 0.5, 0.1)
lim_s = [4 for k in range(len(t))]
lim_i = [-4 for k in range(len(t))]
plt.grid(True)
plt.ylabel("Voltage (V)")
plt.xlabel("Time (s)")
# curr.plot(Er1["Time"]+0.45, Er1["IL1"], '-', c='darkgreen', lineWidth=1, label='IL1', alpha=0.7)
curr.plot(Er1["Time"], Er1["IL2"], '-', c='red', lineWidth=1, label='Ig')
curr.plot(t, lim_s, '-', c='black', lineWidth=1, alpha=0.7, label='+4/-4 A')
curr.plot(t, lim_i, '-', c='black', lineWidth=1, alpha=0.7)
curr.grid(True, which='minor', axis='both')
volt.legend(loc='upper right', shadow=True, fontsize='9')
curr.legend(loc='upper right', shadow=True, fontsize='9')
# volt.set(title='Micro inverter connection to the grid')
volt.set(xlim=[-0.2, 0.2], ylim=[-400, 500])
curr.set(xlim=[-0.2, 0.2], ylim=[-4.5, 4.5])
volt.grid(True, which='minor', axis='both')
plt.savefig('Error1.png', dpi=1000)


fig = plt.figure()
curr = fig.add_subplot(211)
plt.grid(True)
plt.ylabel("Current (A)")
volt = fig.add_subplot(212)
volt.plot(Er2["Time"], Er2["Vbus11"], '-', c='blue', lineWidth=2, label='Vbus')
volt.plot(Er2["Time"], Er2["Rede"], '-', c='darkgreen', lineWidth=1, label='Grid')
t = np.arange(-0.2, 0.5, 0.1)
lim_s = [370 for k in range(len(t))]
plt.grid(True)
plt.ylabel("Voltage (V)")
plt.xlabel("Time (s)")
# curr.plot(Er2["Time"], Er2["IL1"], '-', c='darkgreen', lineWidth=1, label='IL1', alpha=0.7)
curr.plot(Er2["Time"], Er2["IL2"], '-', c='red', lineWidth=1, label='Ig')
volt.plot(t, lim_s, '-', c='red', lineWidth=1, alpha=0.8, label='370 V')
curr.grid(True, which='minor', axis='both')
volt.legend(loc='upper right', shadow=True, fontsize='9')
curr.legend(loc='upper right', shadow=True, fontsize='9')
# volt.set(title='Micro inverter connection to the grid')
volt.set(xlim=[-0.2, 0.2], ylim=[-400, 600])
curr.set(xlim=[-0.2, 0.2], ylim=[-4.5, 4.5])
volt.grid(True, which='minor', axis='both')
plt.savefig('Error2.png', dpi=1000)


fig = plt.figure()
curr = fig.add_subplot(211)
plt.grid(True)
plt.ylabel("Current (A)")
volt = fig.add_subplot(212)
volt.plot(Er3["Time"], Er3["Vbus11"], '-', c='blue', lineWidth=2, label='Vbus')
volt.plot(Er3["Time"], Er3["Rede"], '-', c='darkgreen', lineWidth=1, label='Grid')
t = np.arange(-0.2, 0.5, 0.1)
lim_s = [480 for k in range(len(t))]
plt.grid(True)
plt.ylabel("Voltage (V)")
plt.xlabel("Time (s)")
# curr.plot(Er3["Time"], Er3["IL1"], '-', c='darkgreen', lineWidth=1, label='IL1', alpha=0.7)
curr.plot(Er3["Time"], Er3["IL2"], '-', c='red', lineWidth=1, label='Ig')
volt.plot(t, lim_s, '-', c='red', lineWidth=1, alpha=0.7, label='480 V')
curr.grid(True, which='minor', axis='both')
volt.legend(loc='upper right', shadow=True, fontsize='9')
curr.legend(loc='upper right', shadow=True, fontsize='9')
# volt.set(title='Micro inverter connection to the grid')
volt.set(xlim=[-0.2, 0.2], ylim=[-400, 600])
curr.set(xlim=[-0.2, 0.2], ylim=[-4.5, 4.5])
volt.grid(True, which='minor', axis='both')
plt.savefig('Error3.png', dpi=1000)




fig = plt.figure()
curr = fig.add_subplot(211)
plt.grid(True)
plt.ylabel("Current (A)")
volt = fig.add_subplot(212)
volt.plot(Er4["Time"], Er4["Vbus11"]+13, '-', c='blue', lineWidth=2, label='Vbus')
# volt.plot(Er4["Time"], Er4["Rede"], '-', c='darkgreen', lineWidth=1, label='Grid')
t = np.arange(-0.2, 0.6, 0.1)
lim_s = [370 for k in range(len(t))]
plt.grid(True)
plt.ylabel("Voltage (V)")
plt.xlabel("Time (s)")
curr.plot(Er4["Time"], Er4["IL1"], '-', c='darkgreen', lineWidth=1, label='IL1', alpha=0.7)
curr.plot(Er4["Time"], Er4["IL2"], '-', c='red', lineWidth=1, label='Ig')
volt.plot(t, lim_s, '-', c='red', lineWidth=1, label='370 V', alpha=0.7)
curr.grid(True, which='minor', axis='both')
volt.legend(loc='upper right', shadow=True, fontsize='9')
curr.legend(loc='upper right', shadow=True, fontsize='9')
# volt.set(title='Micro inverter connection to the grid')
volt.set(xlim=[0.3, 0.5], ylim=[330, 400])
curr.set(xlim=[0.3, 0.5], ylim=[-2.5, 2.5])
volt.grid(True, which='minor', axis='both')
plt.savefig('Error4.png', dpi=1000)




fig = plt.figure()
curr = fig.add_subplot(211)
plt.grid(True)
plt.ylabel("Current (A)")
volt = fig.add_subplot(212)
# volt.plot(Er5["Time"], Er5["Vbus11"]+13, '-', c='blue', lineWidth=2, label='Vbus')
volt.plot(Er5["Time"], Er5["Vpv"]*2, '-', c='darkgreen', lineWidth=1, label='Grid')
t = np.arange(-0.2, 2.6, 0.1)
lim_s = [70 for k in range(len(t))]
plt.grid(True)
plt.ylabel("Voltage (V)")
plt.xlabel("Time (s)")
# curr.plot(Er5["Time"], Er5["IL1"], '-', c='darkgreen', lineWidth=1, label='IL1', alpha=0.7)
curr.plot(Er5["Time"], Er5["IL2"], '-', c='red', lineWidth=1, label='Ig')
volt.plot(t, lim_s, '-', c='red', lineWidth=1, label='70 V', alpha=0.7)
curr.grid(True, which='minor', axis='both')
volt.legend(loc='upper right', shadow=True, fontsize='9')
curr.legend(loc='upper right', shadow=True, fontsize='9')
# volt.set(title='Micro inverter connection to the grid')
volt.set(xlim=[1, 1.5], ylim=[40, 80])
curr.set(xlim=[1, 1.5], ylim=[-2.5, 2.5])
volt.grid(True, which='minor', axis='both')
plt.savefig('Error5.png', dpi=1000)




fig = plt.figure()
curr = fig.add_subplot(211)
plt.grid(True)
plt.ylabel("Current (A)")
volt = fig.add_subplot(212)
volt.plot(Er6["Time"], Er6["Vbus11"], '-', c='blue', lineWidth=2, label='Vbus')
volt.plot(Er6["Time"], Er6["Rede"], '-', c='darkgreen', lineWidth=1, label='Grid')
t = np.arange(-0.2, 2.6, 0.1)
lim_s = [70 for k in range(len(t))]
plt.grid(True)
plt.ylabel("Voltage (V)")
plt.xlabel("Time (s)")
curr.plot(Er6["Time"], Er6["IL1"], '-', c='darkgreen', lineWidth=1, label='IL1', alpha=0.7)
curr.plot(Er6["Time"], Er6["IL2"], '-', c='red', lineWidth=1, label='Ig')
# volt.plot(t, lim_s, '-', c='red', lineWidth=1, label='70 V', alpha=0.7)
curr.grid(True, which='minor', axis='both')
volt.legend(loc='upper right', shadow=True, fontsize='9')
curr.legend(loc='upper right', shadow=True, fontsize='9')
# volt.set(title='Micro inverter connection to the grid')
volt.set(xlim=[-0.2, 0.2], ylim=[-400, 550])
curr.set(xlim=[-0.2, 0.2], ylim=[-8, 8])
volt.grid(True, which='minor', axis='both')
plt.savefig('Error6.png', dpi=1000)


fig = plt.figure()
curr = fig.add_subplot(211)
plt.grid(True)
plt.ylabel("Current (A)")
volt = fig.add_subplot(212)
volt.plot(Er6_["Time"], Er6_["Vbus11"], '-', c='blue', lineWidth=2, label='Vbus')
volt.plot(Er6_["Time"], Er6_["Rede"], '-', c='darkgreen', lineWidth=1, label='Grid')
t = np.arange(-0.2, 2.6, 0.1)
lim_s = [70 for k in range(len(t))]
plt.grid(True)
plt.ylabel("Voltage (V)")
plt.xlabel("Time (s)")
curr.plot(Er6_["Time"], Er6_["IL1"], '-', c='darkgreen', lineWidth=1, label='IL1', alpha=0.7)
curr.plot(Er6_["Time"], Er6_["IL2"], '-', c='red', lineWidth=1, label='Ig')
# volt.plot(t, lim_s, '-', c='red', lineWidth=1, label='70 V', alpha=0.7)
curr.grid(True, which='minor', axis='both')
volt.legend(loc='upper right', shadow=True, fontsize='9')
curr.legend(loc='upper right', shadow=True, fontsize='9')
# volt.set(title='Micro inverter connection to the grid')
volt.set(xlim=[-0.2, 0.2], ylim=[-400, 550])
curr.set(xlim=[-0.2, 0.2], ylim=[-8, 8])
volt.grid(True, which='minor', axis='both')
plt.savefig('Error6_.png', dpi=1000)


fig = plt.figure()
curr = fig.add_subplot(211)
plt.grid(True)
plt.ylabel("Current (A)")
volt = fig.add_subplot(212)
# volt.plot(Er7["Time"], Er7["Vbus11"], '-', c='blue', lineWidth=2, label='Vbus')
volt.plot(Er7["Time"], Er7["Rede"], '-', c='darkgreen', lineWidth=1, label='Grid')
t = np.arange(-0.2, 2.6, 0.1)
lim_s = [70 for k in range(len(t))]
plt.grid(True)
plt.ylabel("Voltage (V)")
plt.xlabel("Time (s)")
curr.plot(Er7["Time"], Er7["IL1"], '-', c='darkgreen', lineWidth=1, label='IL1', alpha=0.7)
curr.plot(Er7["Time"], Er7["IL2"], '-', c='red', lineWidth=1, label='Ig')
# volt.plot(t, lim_s, '-', c='red', lineWidth=1, label='70 V', alpha=0.7)
curr.grid(True, which='minor', axis='both')
volt.legend(loc='upper right', shadow=True, fontsize='9')
curr.legend(loc='upper right', shadow=True, fontsize='9')
# volt.set(title='Micro inverter connection to the grid')
volt.set(xlim=[-0.4, 0.1], ylim=[-400, 400])
curr.set(xlim=[-0.4, 0.1], ylim=[-10, 10])
volt.grid(True, which='minor', axis='both')
plt.savefig('Error7.png', dpi=1000)



# plt.show()
